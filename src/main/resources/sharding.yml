dataSources:
  ds_0:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: org.postgresql.Driver
    jdbcUrl: jdbc:postgresql://localhost:5432/transaction_service_db1
    username: postgres
    password: admin
    schemaName: public

  ds_1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: org.postgresql.Driver
    jdbcUrl: jdbc:postgresql://localhost:5432/transaction_service_db2
    username: postgres
    password: admin
    schemaName: public

rules:
  - !SINGLE
    tables:
      - ds_0.wallet_types
      - ds_1.wallet_types

  - !SHARDING
    tables:
      wallets:
        actualDataNodes: ds_${0..1}.wallets
        tableStrategy: # Стратегия шардирования таблиц
          none: { } # Не шардировать таблицы
        databaseStrategy: # сегментирования баз данных
          standard: # сценария с одним столбцом
            shardingColumn: user_uid # Имя столбца шардинга
            shardingAlgorithmName: UserUidShardingAlgorithm # алгоритм

      payment_requests:
        actualDataNodes: ds_${0..1}.payment_requests
        databaseStrategy:
          standard:
            shardingColumn: user_uid
            shardingAlgorithmName: UserUidShardingAlgorithm
        tableStrategy:
          none: { }

      transactions:
        actualDataNodes: ds_${0..1}.transactions
        databaseStrategy:
          standard:
            shardingColumn: user_uid
            shardingAlgorithmName: UserUidShardingAlgorithm
        tableStrategy:
          none: { }

      top_up_requests:
        actualDataNodes: ds_${0..1}.top_up_requests
        databaseStrategy:
          hint:
            shardingAlgorithmName: payment-request-sharding
        tableStrategy:
          none: { }

      withdrawal_requests:
        actualDataNodes: ds_${0..1}.withdrawal_requests
        databaseStrategy:
          hint:
            shardingAlgorithmName: payment-request-sharding
        tableStrategy:
          none: { }

      transfer_requests:
        actualDataNodes: ds_${0..1}.transfer_requests
        databaseStrategy:
          hint:
            shardingAlgorithmName: payment-request-sharding
        tableStrategy:
          none: { }


    shardingAlgorithms:

      payment-request-sharding:
        type: CLASS_BASED
        props:
          strategy: HINT
          algorithmClassName: maxim.module4_4.transaction_service_api.config.sharding.HintAlgorithm

      UserUidShardingAlgorithm:
        type: CLASS_BASED
        props:
          strategy: STANDARD
          algorithmClassName: maxim.module4_4.transaction_service_api.config.sharding.ShardingAlgorithmImpl


props:
  sql-show: false 