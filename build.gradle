plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'maxim.module4_4'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
	set('springCloudVersion', "2023.0.0")
	set('shardingsphereVersion', "5.1.2")
}

dependencies {
	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// Database
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.postgresql:postgresql'

	// ShardingSphere
	implementation "org.apache.shardingsphere:shardingsphere-jdbc-core-spring-boot-starter:${shardingsphereVersion}"
	implementation "org.apache.shardingsphere:shardingsphere-mode-core:${shardingsphereVersion}"

	// CosId
	implementation 'me.ahoo.cosid:cosid-spring-boot-starter:1.16.0'
	implementation 'me.ahoo.cosid:cosid-core:1.16.0'
	implementation 'me.ahoo.cosid:cosid-jdbc:1.16.0'
	implementation 'me.ahoo.cosid:cosid-redis:1.16.0'

	// Utils
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// MapStruct
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	// API Documentation
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	// Tests
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:postgresql:1.19.3'
	testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
	testImplementation 'org.mockito:mockito-core:5.11.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.11.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.2'
	testImplementation 'org.assertj:assertj-core:3.25.3'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
		showExceptions true
		showCauses true
		showStackTraces true
	}
}

// Конфигурация для MapStruct
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += [
        '-Amapstruct.defaultComponentModel=spring',
        '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}