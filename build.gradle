plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation "org.apache.shardingsphere:shardingsphere-jdbc:${project.ext['shardingsphere-jdbc.version']}"
	implementation "org.mapstruct:mapstruct:${project.ext['mapstruct.version']}"
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation "jakarta.validation:jakarta.validation-api:${project.ext['validation-api.version']}"

	// Database
	runtimeOnly 'org.postgresql:postgresql'

	// Utils
	compileOnly 'org.projectlombok:lombok'

	// MapStruct
	annotationProcessor "org.mapstruct:mapstruct-processor:${project.ext['mapstruct.version']}"

	// API Documentation
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	// Tests
	testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
}

tasks.named('test') {
	useJUnitPlatform()
}